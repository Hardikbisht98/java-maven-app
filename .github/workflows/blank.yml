# This is a basic workflow to help you get started with Actions
env:
  COVERAGE_THRESHOLD: 20
  CODE_SMELLS_THRESHOLD: 200
  VULNERABILITIES_THRESHOLD: 6
  
  
  
name: CI



# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
     
        
  build-on-ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
#      extension to setup the java on runner version 2 
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
          
      - name: sonar Cloud
        uses: actions/cache@v1
        with: 
          path: ~/.sonar/cache@v1
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os}}-sonar
          
      - name: maven cache
        uses: actions/cache@v1
        with: 
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml')}}
          restore-keys: ${{ runner.os }}-m2         
      - name: build sonar
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           run mvn=maven ,-b=batch mode,
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Hardikbisht98_java-maven-app
      
      - name: upload a build artifact
        uses: actions/upload-artifact@v2.2.4
        with: 
          name: Artifacts
          path: target/*.jar

#==============junit test with maven publish report========

      - name: test with maven
        run: mvn -B test --file pom.xml
        
      - name: publish report
        uses: actions/upload-artifact@v2
        with: 
          name: test report
          path: target/site/jacoco/
         
         
         
         
         
          
 #     =====================curl command for calling sonar api to get the result value=============
         
         
         
         
      
      - name: Sonar gate       
        shell: bash
        run: |
         curl --location --request GET 'https://sonarcloud.io/api/measures/component?metricKeys=code_smells,coverage,duplicated_lines_density,vulnerabilities,security_hotspots,critical_violations,bugs&component=ramandevopsnew_java-maven-app' --header 'Authorization: Bearer 4512dc92c65af491dad8c07aa97a7d265f91fb4f' > ./Response.json 
          while read jsonData ;
          do
            metric=$(jq -r '.metric' <<< $jsonData)
            value=$(jq -r '.value'<<< $jsonData)
            echo "$metric"
            echo "$value"
            #echo "{metric%.*}"
            if [ "$metric" == "coverage" ] ;
              then
                if [ "${value%.*}" -lt ${{env.COVERAGE-THRESHOLD }} ] ;
                  then
                    echo "Expected ${metric%.*} - ${{env.COVERAGE_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Failed"
                    exit 1
                  else
                    echo "Expected ${metric%.*} - ${{env.COVERAGE_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Passed"
                  fi
            elif [ "$metric" == "code_smells" ] ;
              then
                if [ "${value%.*}" -gt ${{env.CODE_SMELLS_THRESHOLD }} ] ;
                  then
                    echo "Expected ${metric%.*} - ${{env.CODE_SMELLS_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Failed"
                    exit 1
                  else
                    echo "Expected ${metric%.*} - ${{env.CODE_SMELLS_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Passed"
                  fi
            elif [ "$metric" == "vulnerabilities" ] ;
              then
                if [ "${value%.*}" -gt ${{env.VULNERABILITIES_THRESHOLD }} ] ;
                  then
                    echo "Expected ${metric%.*} - ${{env.VULNERABILITIES_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Failed"
                    exit 1
                  else
                    echo "Expected ${metric%.*} - ${{env.VULNERABILITIES_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Passed"
                  fi
            elif [ "$metric" == "critical_violations" ] ;
              then
                if [ "${value%.*}" -gt ${{env.CRITICAL_VIOLATIONS_THRESHOLD }} ] ;
                  then
                    echo "Expected ${metric%.*} - ${{env.CRITICAL_VIOLATIONS_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Failed"
                    exit 1
                  else
                    echo "Expected ${metric%.*} - ${{env.CRITICAL_VIOLATIONS_THRESHOLD}}"
                    echo "Actual ${metric%.*} - ${value%.*}"
                    echo "Sonar code coverage Gate: Passed"
                  fi
            fi
          done <<< $(jq -c '.component.measures[]' $PWD/Response.json)
          cat $PWD/Response.json
          
          
          
        
#         ======================reusable workflow=======================
  compliance:
    uses: Hardikbisht98/mygitactionS/.github/workflows/Reuseworkflow.yml@main   
      
      


       
      
   
    
      
 

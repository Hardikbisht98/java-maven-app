# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-on-ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
#      extension to setup the java on runner version 2 
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
          
      - name: sonar Cloud
        uses: actions/cache@v1
        with: 
          path: ~/.sonar/cache@v1
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os}}-sonar
          
      - name: maven cache
        uses: actions/cache@v1
        with: 
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml')}}
          restore-keys: ${{ runner.os }}-m2         
      - name: build sonar
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           run mvn=maven ,-b=batch mode,
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Hardikbisht98_java-maven-app
        
        
  build-on-windows:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
#      extension to setup the java on runner version 2 
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
          
      - name: sonar Cloud
        uses: actions/cache@v1
        with: 
          path: ~/.sonar/cache@v1
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os}}-sonar
          
      - name: maven cache
        uses: actions/cache@v1
        with: 
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml')}}
          restore-keys: ${{ runner.os }}-m2         
      - name: build sonar
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           run mvn=maven ,-b=batch mode,
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Hardikbisht98_java-maven-app
              
      
  build-macos:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
#      extension to setup the java on runner version 2 
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
          
      - name: sonar Cloud
        uses: actions/cache@v1
        with: 
          path: ~/.sonar/cache@v1
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os}}-sonar
          
      - name: maven cache
        uses: actions/cache@v1
        with: 
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml')}}
          restore-keys: ${{ runner.os }}-m2         
      - name: build sonar
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           run mvn=maven ,-b=batch mode,
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Hardikbisht98_java-maven-app
                 
         


